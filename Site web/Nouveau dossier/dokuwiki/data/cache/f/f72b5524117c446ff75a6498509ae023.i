a:135:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:0;}i:2;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:5:"start";i:1;s:6:"Index:";}i:2;i:1;}i:3;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:17;}i:4;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:30:"Règles de la structure de BD:";i:1;i:1;i:2;i:19;}i:2;i:19;}i:5;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:1;}i:2;i:19;}i:6;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:19;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:190:"1.	Un usager peut être un étudiant qui répond à des questions ou des quiz de questions ou un enseignant qui écrit des questions et ses réponses et assemble des quiz avec des questions.";}i:2;i:64;}i:8;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:254;}i:9;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:254;}i:10;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:60:"2.	Un usager_étudiant est identifié par son numéro de DA.";}i:2;i:256;}i:11;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:316;}i:12;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:316;}i:13;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:287:"3.	Un usager_Professeur est identifié par son numéro d’enseignant commençant par le numéro du programme.  Les professeurs de programmes commençant par 19 ou 20 ne pourront pas être identifiés séparément des étudiants mais ça ne s’applique pas au département informatique.";}i:2;i:318;}i:14;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:605;}i:15;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:605;}i:16;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:86:"4.	Un étudiant à accès aux questions et quiz d’un cours que s’il y est inscrit.";}i:2;i:607;}i:17;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:693;}i:18;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:693;}i:19;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:237:"5.	Chaque enseignant à la charge d’inscrire ses étudiants à son cours en début de session.  Il pourra télé-verser le fichier du système Colnet pour chacun de ses groupes.  Les nouveaux étudiants seront automatiquement ajoutés.";}i:2;i:695;}i:20;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:932;}i:21;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:932;}i:22;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:194:"6.	Un professeur peut personnaliser la liste de ses cours et consulter ses questions ou quiz par cours même s’il n’est pas inscrit comme enseignant pour un cours (par le fichier de Colnet).";}i:2;i:934;}i:23;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1128;}i:24;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1128;}i:25;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:302:"7.	On doit pouvoir modifier un nom de cours ou son code au besoin, en autant que les objectifs du cours reste fondamentalement les même et donc les questions et quiz ne deviendront pas complètement hors sujet.  Les Enseignants auront la responsabilité de faire le ménage de leurs questions et quiz.";}i:2;i:1130;}i:26;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1432;}i:27;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1432;}i:28;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:58:"8.	Chaque question est associée à un ou plusieurs cours.";}i:2;i:1434;}i:29;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1492;}i:30;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1492;}i:31;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:140:"9.	Chaque quiz est associé à un seul ou plusieurs cours.   Exemple : début de session, même matière en Java pour industriel et gestion.";}i:2;i:1494;}i:32;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1634;}i:33;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1634;}i:34;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:204:"10.	Un quiz peut contenir des questions provenant également de d’autres cours : Certains cours étant en parti identiques à d’autres tel que des cours s’appliquant au profil Gestion vs Industriel.";}i:2;i:1636;}i:35;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1840;}i:36;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1840;}i:37;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:166:"11.	On doit pouvoir créer une copie d’une question existante afin de l’éditer et d’en créer une nouvelle un peu différente… Par exemple, plus difficile…";}i:2;i:1842;}i:38;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2008;}i:39;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2008;}i:40;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:187:"12.	Un professeur peut associer des mots-clés aux questions afin de s’en servir comme filtre de recherche.  L’étudiant pourra aussi consulter les questions selon ses filtres (Tags).";}i:2;i:2010;}i:41;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2197;}i:42;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2197;}i:43;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:116:"13.	Chaque question a un propriétaire (auteur), un degré de difficulté, un type (voir liste des types plus loin).";}i:2;i:2199;}i:44;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2315;}i:45;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2315;}i:46;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:159:"14.	La difficulté d’une question peut être réglée à 1-facile, 2-moyen ou 3-difficile.  D’autres niveau peuvent être ajoutés dans le futur au besoin.";}i:2;i:2317;}i:47;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2476;}i:48;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2476;}i:49;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:189:"15.	 Chaque question peut avoir un hyper-lien vers une référence web (note de cours du professeur, site de Oracle, etc…).  Ce lien apparaîtra après la « correction » de la question.";}i:2;i:2478;}i:50;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2667;}i:51;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2667;}i:52;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:227:"16.	Chaque question à une date de création et une date de dernière modification afin de voir si une question n’a pas été révisée depuis longtemps et mériterait que le professeur veille a s’assurer de sa pertinence. ";}i:2;i:2669;}i:53;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2896;}i:54;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2896;}i:55;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:69:"17.	Chaque question consiste en un énoncé textuel et/ou une image. ";}i:2;i:2898;}i:56;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2967;}i:57;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2967;}i:58;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:80:"18.	Chaque question de type vrai ou faux a un statut d’énoncé valide ou non.";}i:2;i:2969;}i:59;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3049;}i:60;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3049;}i:61;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:104:"19.	Chaque question d’un autre type que vrai ou faux peut avoir une ou plusieurs réponses associées.";}i:2;i:3051;}i:62;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3155;}i:63;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3155;}i:64;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:104:"20.	Chaque réponse est associée à une seule question, a un statut valide ou non (pour la correction).";}i:2;i:3157;}i:65;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3261;}i:66;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3261;}i:67;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:68:"21.	Chaque réponse consiste en un énoncé textuel et/ou une image.";}i:2;i:3263;}i:68;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3331;}i:69;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3331;}i:70;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:258:"22.	Pour chaque réponse, on compile le nombre de fois que les étudiants l’ont choisi comme bonne réponse afin de permettre à l’enseignant d’évaluer la réponse la plus couramment donnée dans le cas entre autre que la question est souvent ratée. ";}i:2;i:3333;}i:71;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3591;}i:72;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3591;}i:73;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:180:"23.	L’ordre des réponses à une question peut être prédéfini par le professeur ou bien généré aléatoirement.  C’est le professeur qui décide du mode aléatoire ou non.";}i:2;i:3593;}i:74;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3773;}i:75;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3773;}i:76;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:74:"24.	Un quiz à un type (voir types de quiz) et un propriétaire (auteur). ";}i:2;i:3775;}i:77;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3849;}i:78;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3849;}i:79;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:227:"25.	Comme pour les réponses, l’ordre des questions dans un quiz généré par le professeur peut être prédéfini par lui-même ou bien généré aléatoirement.  C’est le professeur qui décide du mode aléatoire ou non.";}i:2;i:3851;}i:80;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4078;}i:81;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4078;}i:82;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:433:"26.	Un prof peut décider à quel(s) type(s) de quiz sa question pourra être associée(s) afin de d’éviter qu’une question ne se retrouve dans un quiz… Par exemple, réserver une question pour les quiz formatif et / ou sommatifs ou encore décider qu’une question ne sera générée qu’aléatoirement (pour la pratique ou pour s’amuser) et éliminer la question de la liste lors de la création d’un quiz spécifique.";}i:2;i:4080;}i:83;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4513;}i:84;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4513;}i:85;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:98:"27.	Les statistiques compilées, outre le nombre de fois qu’une réponse a été choisie, sont :";}i:2;i:4515;}i:86;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4613;}i:87;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4613;}i:88;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:213:"27.1.	Nombre de fois qu’un étudiant « x » a répondu à une question « y » dans le cadre d’un quiz « z »      ainsi que le nombre de fois qu’il a réussi.
27.2.	De cela, on peut déduire et calculer :";}i:2;i:4616;}i:89;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4829;}i:90;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4829;}i:91;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:251:"27.2.1.	Qui a répondu à un quiz
27.2.2.	La moyenne du quiz
27.2.3.	La participation « spontanée » d’un étudiant
27.2.4.	Le taux de réussite d’une question
27.2.5.	La moyenne d’un étudiant par cour 
27.2.6.	Le cours le moins réussi, etc.";}i:2;i:4831;}i:92;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5082;}i:93;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5082;}i:94;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:34:"28.	Les types de questions sont : ";}i:2;i:5084;}i:95;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5118;}i:96;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5118;}i:97;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:442:"28.1.	Aléatoire - généré par l’étudiant : questions d’un cours avec ou sans filtres de mots-clés, accessible aux étudiants inscrits.  L’étudiant répond aux questions et s’arrête quand il le veut ou lorsqu’il a répondu à toutes les questions correspondant à sa requête.  Les réponses sont affichées après chaque question répondues ainsi que le score cumulé.  Les statistiques sont mises à jour à chaque question.";}i:2;i:5120;}i:98;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5562;}i:99;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5562;}i:100;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:552:"28.2.	Formatif - généré par le professeur : questions d’un ou plusieurs cours, choisies avec ou sans filtres de mots-clés, accessible aux étudiants inscrits.  L’étudiant doit répondre à toutes les questions.  Le résultat (score) est affiché à la fin.  Les statistiques sont mises à jour seulement si le questionnaire est complété.
28.2.1.	Le professeur peut choisir chaque question ou se faire proposer des questions aléatoires selon ses paramètres tels : nombre total de questions, taux de questions selon le degré de difficulté.";}i:2;i:5564;}i:101;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6116;}i:102;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6116;}i:103;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:91:"28.3.	Sommatif – Mode examen : nécessite l’implémentation de mesures de sécurité…";}i:2;i:6118;}i:104;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6209;}i:105;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6209;}i:106;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"29.	Les types de questions sont (en ordre de degré de difficulté potentiel): ";}i:2;i:6211;}i:107;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6290;}i:108;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6290;}i:109;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:64:"29.1.	Vrai ou faux.  Un classique qui se passe d’explications.";}i:2;i:6292;}i:110;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6356;}i:111;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6356;}i:112;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:102:"29.2.	Choix multiples à réponse unique : On donne une liste de réponses et une seule est la bonne. ";}i:2;i:6358;}i:113;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6460;}i:114;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6460;}i:115;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:408:"29.3.	Choix multiples à réponses multiples : On donne une liste de réponses et plusieurs réponses sont bonnes.  L’étudiant doit cocher toutes les bonnes réponses pour réussir la question.  Ce type de question demande plus de réflexion.  On peut même spécifier dans l’énoncé : « cochez la ou les bonnes réponses » et ne définir qu’une seule bonne réponse pour laisser place au doute… ";}i:2;i:6462;}i:116;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6870;}i:117;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6870;}i:118;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:727:"29.4.	Réponse courte : On demande de donner un mot répondant à la question.  On peut mettre plus d’une réponse mais toutes les réponses associées à ce type de question seront valide et l’étudiant devra donner une de ces réponses pour réussir la question.  Par exemple : Nommer un type de donnée pour identifier un nombre décimal : réponses possibles : float, double ou long double.  Par contre, on ne pourrait demander d’énumérer les 3 types.  Il faudra développer une interface spéciale dans un futur projet pour ce genre de question à cause de la probabilité de rejeter une bonne réponse parce que la syntaxe de la réponse de l’étudiant n’est pas identique à celle attendue par le professeur.";}i:2;i:6872;}i:119;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7599;}i:120;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7599;}i:121;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:73:"30.	Types de question à développer… et pistes d’implémentations…";}i:2;i:7601;}i:122;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7674;}i:123;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7674;}i:124;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:743:"30.1.	ExProg - Compilation : Exercice de programmation qui sert à tester si un code compile. L’accent est mis sur l’analyse des codes d’erreurs reçus. Le professeur peut fournir un programme qui ne compile pas et demander de corriger l’erreur.  L’étudiant pourra apprendre à « traduire » les codes d’erreurs de Visual Studio et mieux cible les causes du problème. Chaque tentative de compilation pourra être compilée dans les statistiques comme « non réussi ».  On pourra ainsi savoir combien de tentatives ont été nécessaires pour trouver la solution.   Bien entendu, un étudiant pourrait simplement supprimer une partie du code… Une façon de vérifier cela serait de valider la longueur de la String du code…";}i:2;i:7676;}i:125;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8419;}i:126;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8419;}i:127;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1328:"30.2.	ExProg - Validation : Exercice de programmation qui sert à tester si un code retourne un extrant spécifique. L’accent est mis sur l’analyse des codes d’erreurs reçus. Le professeur peut fournir un cadre de programme à compléter (dans la BD, on stockerait l’énoncé, le code de début et le code de fin dans le même champ « énoncé » en séparant les 3 éléments par un caractère spécial.  L’interface utiliserait une reg-ex pour récupérer les blocs et les mettre dans les champs appropriés.  Pour la réponse, le professeur fournirait des jeux de tests.  Encore ici, les informations seraient stockées dans le champ « énoncé » de la table réponse en séparant les intrants, extrant de chaque jeu de test avec des caractères spéciaux et une reg-ex permettrait de tout replacer dans l’interface.   C’est l’interface qui procéderait à la « composition » et à la  « décomposition » de ces énoncés spéciaux…   Chaque tentative de validation d’un ensemble de jeux test pourra être compilée dans les statistiques comme « non réussi ».  On pourra ainsi savoir combien de tentatives ont été nécessaire pour trouver la solution.   Avec le principe de jeux de tests, si les valeurs testées sont inconnues des étudiants, il leur sera plus difficile de « hard coder ».";}i:2;i:8421;}i:128;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9749;}i:129;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9749;}i:130;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:5:"start";i:1;s:6:"Index:";}i:2;i:9751;}i:131;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:9767;}i:132;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9767;}i:133;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:9767;}i:134;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:9767;}}